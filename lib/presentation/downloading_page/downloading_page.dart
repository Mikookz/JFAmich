import '../downloading_page/widgets/downloading_item_widget.dart';import 'bloc/downloading_bloc.dart';import 'models/downloading_item_model.dart';import 'models/downloading_model.dart';import 'package:flutter/material.dart';import 'package:zonar_marketing__grapichs/core/app_export.dart';import 'package:zonar_marketing__grapichs/presentation/delete_popup_dialog/delete_popup_dialog.dart';class DownloadingPage extends StatefulWidget {@override _DownloadingPageState createState() =>  _DownloadingPageState();
static Widget builder(BuildContext context) { return BlocProvider<DownloadingBloc>(create: (context) => DownloadingBloc(DownloadingState(downloadingModelObj: DownloadingModel()))..add(DownloadingInitialEvent()), child: DownloadingPage()); } 
onTapImgVolume(BuildContext context) { showDialog(context: context, builder: (_) => AlertDialog(content: DeletePopupDialog.builder(context),backgroundColor: Colors.transparent, contentPadding: EdgeInsets.zero, insetPadding: EdgeInsets.only(left: 0),)); } 
 }
class _DownloadingPageState extends State<DownloadingPage> with  AutomaticKeepAliveClientMixin<DownloadingPage> {@override bool get wantKeepAlive =>  true;
@override Widget build(BuildContext context) { return SafeArea(child: Scaffold(backgroundColor: Colors.transparent, body: Container(width: double.maxFinite, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Padding(padding: getPadding(left: 25, top: 22, right: 25), child: BlocSelector<DownloadingBloc, DownloadingState, DownloadingModel?>(selector: (state) => state.downloadingModelObj, builder: (context, downloadingModelObj) {return ListView.separated(physics: NeverScrollableScrollPhysics(), shrinkWrap: true, separatorBuilder: (context, index) {return SizedBox(height: getVerticalSize(16));}, itemCount: downloadingModelObj?.downloadingItemList.length ?? 0, itemBuilder: (context, index) {DownloadingItemModel model = downloadingModelObj?.downloadingItemList[index] ?? DownloadingItemModel(); return DownloadingItemWidget(model, onTapImgVolume: () {onTapImgVolume(context);});});}))])))); } 
onTapImgVolume(BuildContext context) { showDialog(context: context, builder: (_) => AlertDialog(content: DeletePopupDialog.builder(context),backgroundColor: Colors.transparent, contentPadding: EdgeInsets.zero, insetPadding: EdgeInsets.only(left: 0),)); } 
 }
